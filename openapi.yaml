openapi: 3.0.1
info:
  title: Sentinel API
  version: 1.0.0

servers:
  - url: http://localhost:8080

paths:
  /api/review/human:
    post:
      summary: Submit a review request for human review
      operationId: SubmitReview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewRequest"
      responses:
        "200":
          description: Review queued successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewStatusResponse"
  /api/review/llm:
    post:
      summary: Submit a review request for LLM review
      operationId: SubmitReviewLLM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewRequest"
      responses:
        "200":
          description: Review queued successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewStatusResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/review/status:
    get:
      summary: Get the status of a review request
      operationId: GetReviewResult
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Review status retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewResult"
        "404":
          description: Review not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/review/llm/list:
    get:
      summary: Get all LLM review results
      operationId: GetLLMReviews
      responses:
        "200":
          description: List of all LLM review results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
  /api/stats:
    get:
      summary: Get hub statistics
      operationId: GetHubStats
      responses:
        "200":
          description: Hub statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HubStats"
  /api/explain:
    post:
      summary: Get an explanation and danger score for a code snippet
      operationId: GetLLMExplanation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeSnippet"
      responses:
        "200":
          description: LLM explanation retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LLMExplanation"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/review/llm/prompt:
    post:
      summary: Submit a new prompt for LLM reviews
      operationId: SetLLMPrompt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LLMPrompt"
      responses:
        "200":
          description: Prompt updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LLMPromptResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: Get the current LLM review prompt
      operationId: GetLLMPrompt
      responses:
        "200":
          description: Current LLM prompt retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  prompt:
                    type: string
components:
  schemas:
    CodeSnippet:
      type: object
      properties:
        text:
          type: string
      required:
        - text
    LLMExplanation:
      type: object
      properties:
        explanation:
          type: string
        score:
          type: number
      required:
        - explanation
        - score
    Review:
      type: object
      properties:
        id:
          type: string
        request:
          $ref: "#/components/schemas/ReviewRequest"
      required:
        - id
        - request
    ReviewRequest:
      type: object
      properties:
        agent_id:
          type: string
        task_state:
          $ref: "#/components/schemas/TaskState"
        tool_choices:
          type: array
          items:
            $ref: "#/components/schemas/ToolChoice"
        last_messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
      required:
        - agent_id
        - task_state
        - tool_choices
        - last_messages
    ReviewStatusResponse:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: "#/components/schemas/Status"
      required:
        - id
        - status
    ReviewResult:
      type: object
      properties:
        id:
          type: string
        decision:
          $ref: "#/components/schemas/Decision"
        tool_choice:
          $ref: "#/components/schemas/ToolChoice"
        reasoning:
          type: string
      required:
        - id
        - decision
        - tool_choice
        - reasoning
    ErrorResponse:
      type: object
      properties:
        status:
          type: string
      required:
        - status
    TaskState:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        tools:
          type: array
          items:
            $ref: "#/components/schemas/Tool"
        tool_choice:
          $ref: "#/components/schemas/ToolChoice"
        store:
          type: object
          additionalProperties: true
        output:
          $ref: "#/components/schemas/Output"
        completed:
          type: boolean
        metadata:
          type: object
          additionalProperties: true
      required:
        - messages
        - tools
        - output
        - completed
    Message:
      type: object
      properties:
        content:
          type: string
        role:
          type: string
        source:
          type: string
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/ToolCall"
        tool_call_id:
          type: string
        function:
          type: string
      required:
        - content
        - role
    Tool:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        attributes:
          type: object
          additionalProperties: true
      required:
        - name
    ToolChoice:
      type: object
      properties:
        id:
          type: string
        function:
          type: string
        arguments:
          $ref: "#/components/schemas/Arguments"
        type:
          type: string
      required:
        - id
        - function
        - arguments
        - type
    Arguments:
      type: object
      properties:
        cmd:
          type: string
        code:
          type: string
    Output:
      type: object
      properties:
        model:
          type: string
        choices:
          type: array
          items:
            $ref: "#/components/schemas/Choice"
        usage:
          $ref: "#/components/schemas/Usage"
    Choice:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/AssistantMessage"
        stop_reason:
          type: string
      required:
        - message
    AssistantMessage:
      type: object
      properties:
        content:
          type: string
        source:
          type: string
        role:
          type: string
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/ToolCall"
      required:
        - content
        - role
    ToolCall:
      type: object
      properties:
        id:
          type: string
        function:
          type: string
        arguments:
          type: object
          additionalProperties: true
        type:
          type: string
        parse_error:
          type: string
      required:
        - id
        - function
        - arguments
        - type
    Usage:
      type: object
      properties:
        input_tokens:
          type: integer
        output_tokens:
          type: integer
        total_tokens:
          type: integer
      required:
        - input_tokens
        - output_tokens
        - total_tokens
    Decision:
      type: string
      enum:
        - approve
        - reject
        - escalate
        - terminate
        - modify
    Status:
      type: string
      enum:
        - queued
        - processing
        - completed
        - timeout
    HubStats:
      type: object
      properties:
        connected_clients:
          type: integer
        queued_reviews:
          type: integer
        stored_reviews:
          type: integer
        free_clients:
          type: integer
        busy_clients:
          type: integer
        assigned_reviews:
          type: object
          additionalProperties:
            type: integer
        review_distribution:
          type: object
          additionalProperties:
            type: integer
        completed_reviews:
          type: integer
      required:
        - connected_clients
        - queued_reviews
        - stored_reviews
        - free_clients
        - busy_clients
        - assigned_reviews
        - review_distribution
        - completed_reviews
    LLMPrompt:
      type: object
      properties:
        prompt:
          type: string
      required:
        - prompt
    LLMPromptResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      required:
        - status
        - message
